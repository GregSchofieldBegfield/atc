define [
  'underscore'
  'backbone'
  'cs!models/content/inherits/container'
], (_, Backbone, BaseContainerModel) ->

  return class Book extends BaseContainerModel
    defaults:
      title: 'Untitled Book'

    mediaType: 'application/vnd.org.cnx.collection'
    accept: ['application/vnd.org.cnx.module'] # Module


    # Helper function to parse html-encoded data.
    #
    # Assumptions:
    # - body is a flat list (not a tree)
    # - `<nav>` is the root element
    parseHTML: (html) ->
      if typeof html isnt 'string' then return []

      results = []

      $(html).find('> ol > li').each (index, el) ->
        $el = $(el)
        $node = $el.children().eq(0)

        if $node.is('a')
          id = $node.attr('href')
          title = $node.text()

        # Only remember the title if it's overridden
        if not title or $node.hasClass('autogenerated-text')
          results.push({id: id})
        else
          results.push({id: id, title: title})

      return results


    # Currently, a Book does not support full Tree editing
    # so generate a naive list.
    toHTML: () ->
      listItems = @getChildren().map (child) ->
        return "<li><a href='#{child.id}' class='autogenerated-text'>#{child.get('title')}</a></li>"

      return """
        <nav>
          <ol>
            #{listItems.join('\n')}
          </ol>
        </nav>
      """

    parse: (json) ->
      childIdsAndTitles = @parseHTML(json.body)

      # Look up each entry in Contents
      childModels = _.map childIdsAndTitles, (item) =>
        @_ALL_CONTENT_HACK.get({id: item.id})

      @getChildren().reset(childModels, {parse:true})
      delete json.body


      # Squirrel away the overridden titles
      @getChildren().titles = childIdsAndTitles

      return json



    toJSON: () ->
      json = super()
      delete json.contents
      json.body = @toHTML()
      return json
